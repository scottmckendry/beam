package views

import (
	"github.com/scottmckendry/beam/db/sqlc"
	"github.com/scottmckendry/beam/ui/components/icon"
	"github.com/scottmckendry/beam/ui/components/card"
	"github.com/dustin/go-humanize"
)

templ DashboardStats(s db.GetDashboardStatsRow) {
	<div class="grid gap-4 grid-cols-2 lg:grid-cols-5" id="dashboard-stats-section">
		@card.Card() {
			@card.Header(card.HeaderProps{Class: "flex flex-row items-center justify-between space-y-0 pb-2"}) {
				<h3 class="text-lg font-medium">Customers</h3>
				@icon.Building2(icon.Props{Size: 20, Class: "text-muted-foreground"})
			}
			@card.Content() {
				<div class="text-2xl font-bold">{ s.TotalCustomers }</div>
				<p class="text-xs text-muted-foreground">{ s.ActiveCustomers } active</p>
			}
		}
		@card.Card() {
			@card.Header(card.HeaderProps{Class: "flex flex-row items-center justify-between space-y-0 pb-2"}) {
				<h3 class="text-lg font-medium">Contacts</h3>
				@icon.Users(icon.Props{Size: 20, Class: "text-muted-foreground"})
			}
			@card.Content() {
				<div class="text-2xl font-bold">{ s.TotalContacts }</div>
				<p class="text-xs text-muted-foreground">All customers</p>
			}
		}
		@card.Card() {
			@card.Header(card.HeaderProps{Class: "flex flex-row items-center justify-between space-y-0 pb-2"}) {
				<h3 class="text-lg font-medium">Projects</h3>
				@icon.FolderGit2(icon.Props{Size: 20, Class: "text-muted-foreground"})
			}
			@card.Content() {
				<div class="text-2xl font-bold">{ s.TotalProjects }</div>
				<p class="text-xs text-muted-foreground">GitHub repos</p>
			}
		}
		@card.Card() {
			@card.Header(card.HeaderProps{Class: "flex flex-row items-center justify-between space-y-0 pb-2"}) {
				<h3 class="text-lg font-medium">Revenue</h3>
				@icon.DollarSign(icon.Props{Size: 20, Class: "text-muted-foreground"})
			}
			@card.Content() {
				<div class="text-2xl font-bold">${ s.MonthlyRevenue }</div>
				if s.RevenueChange > 0 {
					<p class="text-xs text-muted-foreground">
						@icon.TrendingUp(icon.Props{Size: 12, Class: "inline mr-1", Color: "#22c555"})
						+{ s.RevenueChange }%
					</p>
				}
				if s.RevenueChange < 0 {
					<p class="text-xs text-muted-foreground">
						@icon.TrendingDown(icon.Props{Size: 12, Class: "inline mr-1", Color: "#ef4444"})
						-{ s.RevenueChange }%
					</p>
				}
				if s.RevenueChange == 0 {
					<p class="text-xs text-muted-foreground">
						No change
					</p>
				}
			}
		}
		@card.Card() {
			@card.Header(card.HeaderProps{Class: "flex flex-row items-center justify-between space-y-0 pb-2"}) {
				<h3 class="text-lg font-medium">Invoices</h3>
				@icon.FileText(icon.Props{Size: 20, Class: "text-muted-foreground"})
			}
			@card.Content() {
				<div class="text-2xl font-bold">{ s.TotalInvoices }</div>
				<p class="text-xs text-muted-foreground">
					{ s.PendingInvoices } pending, { s.OverdueInvoices } overdue
				</p>
			}
		}
	</div>
}

templ DashboardActivity(activities []db.GetRecentActivityRow) {
	<div class="mt-4" id="dashboard-activity-section">
		@card.Card() {
			@card.Header(card.HeaderProps{Class: ""}) {
				<div class="flex items-center gap-2">
					@icon.Activity(icon.Props{Size: 20})
					<h3 class="text-lg font-medium">Recent Activity</h3>
				</div>
				<p class="text-sm text-muted-foreground">Latest updates across all customers</p>
			}
			@card.Content() {
				<div class="relative">
					<div class="absolute left-6 top-10 bottom-10 w-px bg-border"></div>
					for _, a := range activities {
						<div class="relative flex items-center mb-4 p-1 last:mb-0 rounded-md hover:bg-muted">
							<div class="relative z-10 flex min-w-10 h-10 w-10 items-center justify-center rounded-full bg-muted">
								switch a.ActivityType {
									case "project":
										@icon.FolderGit2(icon.Props{Size: 17})
									case "subscription":
										@icon.CreditCard(icon.Props{Size: 17})
									case "contact":
										@icon.Users(icon.Props{Size: 17})
									case "invoice":
										@icon.FileText(icon.Props{Size: 17})
								}
							</div>
							<div class="ml-4 min-w-0">
								<p class="font-medium">{ a.CustomerName }</p>
								<p class="text-sm text-muted-foreground">{ a.Description }</p>
							</div>
							<div class="ml-auto px-2 text-xs text-muted-foreground whitespace-nowrap">
								{ humanize.Time(a.CreatedAt.Time) }
							</div>
						</div>
					}
				</div>
			}
		}
	</div>
}

templ Dashboard() {
	<div id="inner-content" class="flex-1 p-4 md:p-6">
		<div id="dashboard-stats-section" data-on-load="@get('/sse/dashboard/stats')" class="relative">
			<div class="grid gap-4 grid-cols-2 lg:grid-cols-5"></div>
		</div>
		<div id="dashboard-activity-section" data-on-load="@get('/sse/dashboard/activity')" class="relative mt-4">
			@card.Card() {
				@card.Header(card.HeaderProps{Class: ""}) {
					<div class="flex items-center gap-2">
						@icon.Activity(icon.Props{Size: 20})
						<h3 class="text-lg font-medium">Recent Activity</h3>
					</div>
					<p class="text-sm text-muted-foreground">Latest updates across all customers</p>
				}
				@card.Content() {
					<div class="space-y-4"></div>
				}
			}
		</div>
	</div>
}
