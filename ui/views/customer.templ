package views

import (
	"fmt"
	"strings"
	"github.com/scottmckendry/beam/ui/utils"
	"github.com/scottmckendry/beam/db/sqlc"
)


var tabHeaders = []string{
	"Overview",
	"Contacts",
	"Subscriptions",
	"Projects",
}

type CustomerFormProps struct {
	Name        string
	Email       string
	Status      string
	Address     string
	Phone       string
	Website     string
	Notes       string
	ButtonLabel string
	ActionURL   string
}

templ AddCustomer() {
	@customerForm(CustomerFormProps{
		Name:        "",
		Email:       "",
		Status:      "active",
		Address:     "",
		Phone:       "",
		Website:     "",
		Notes:       "",
		ButtonLabel: "Add Customer",
		ActionURL:   "@get('/sse/customer/add-submit', {contentType: 'form'})",
	})
}

templ EditCustomer(c db.GetCustomerRow) {
	@customerForm(CustomerFormProps{
		Name:        c.Name,
		Email:       c.Email.String,
		Status:      c.Status,
		Address:     c.Address.String,
		Phone:       c.Phone.String,
		Website:     c.Website.String,
		Notes:       c.Notes.String,
		ButtonLabel: "Update Customer",
		ActionURL:   fmt.Sprintf("@get('/sse/customer/edit-submit/%s', {contentType: 'form'})", c.ID.String()),
	})
}

templ customerForm(p CustomerFormProps) {
	<div id="inner-content" class="p-6">
		<form class="form grid gap-6 w-full max-w-3xl mx-auto" data-on-submit={ p.ActionURL }>
			<div class="grid grid-cols-1 md:grid-cols-2 gap-6">
				<div class="grid gap-2">
					<label for="name">Name</label>
					<input type="text" id="name" name="name" placeholder="Customer Name" value={ p.Name } required/>
				</div>
				<div class="grid gap-2">
					<label for="email">Email</label>
					<input type="email" id="email" name="email" placeholder="mail@example.com" value={ p.Email } required/>
				</div>
				<div class="grid gap-2">
					<label for="address">Address</label>
					<input type="text" id="address" name="address" placeholder="123 Main St, City, Country" value={ p.Address }/>
				</div>
				<div class="grid gap-2">
					<label for="phone">Phone</label>
					<input type="tel" id="phone" name="phone" placeholder="+64 21 123 4567" value={ p.Phone }/>
				</div>
				<div class="grid gap-2">
					<label for="website">Website</label>
					<input type="url" id="website" name="website" placeholder="https://example.com" value={ p.Website }/>
				</div>
				<div class="grid gap-2">
					<label for="status">Status</label>
					<select id="status" name="status" class="w-full">
						for _, status := range []string{"active", "inactive", "prospect"} {
							if status == p.Status {
								<option value={ status } selected>{ utils.Capitalise(status) }</option>
							} else {
								<option value={ status }>{ utils.Capitalise(status) }</option>
							}
						}
					</select>
				</div>
			</div>
			<div class="grid gap-2 mt-6">
				<label for="notes">Notes</label>
				<textarea id="notes" name="notes" placeholder="Markdown supported" rows="8">{ p.Notes }</textarea>
			</div>
			<button type="submit" class="btn w-full mt-6">{ p.ButtonLabel }</button>
		</form>
	</div>
}

templ Customer(c db.GetCustomerRow) {
	<div id="inner-content" class="flex-1 p-4 md:p-6">
		<div class="tabs w-full" id="customer-tabs">
			<nav role="tablist" aria-orientation="horizontal" class="w-full">
				for i, header := range tabHeaders {
					<button
						type="button"
						role="tab"
						id={ fmt.Sprintf("customer-tabs-tab-%d", i+1) }
						aria-controls={ fmt.Sprintf("customer-tabs-panel-%d", i+1) }
						aria-selected={ i == 0 }
						tabindex="0"
						data-on-click={ fmt.Sprintf("@get('/sse/customer/%s/%s')", c.ID.String(), strings.ToLower(header)) }
					>
						if header == "Subscriptions" {
							<span class="sm:hidden">Subs</span>
							<span class="hidden sm:inline">{ header }</span>
						} else {
							<span>{ header }</span>
						}
					</button>
				}
			</nav>
			for i := range tabHeaders {
				<div
					role="tabpanel"
					id={ fmt.Sprintf("customer-tabs-panel-%d", i+1) }
					aria-labelledby={ fmt.Sprintf("customer-tabs-tab-%d", i+1) }
					tabindex="-1"
					aria-selected={ i == 0 }
				>
					if i == 0 {
						@CustomerOverview(c)
					} else {
						<div id="customer-tab-content"></div>
					}
				</div>
			}
		</div>
	</div>
}
